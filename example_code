#!/usr/bin/env python
# -*- coding: utf-8 -*-

1. __add__方法示例
class Vector(object):
    def __init__(self, a, b):
        self.a = a
        self.b = b

    def __str__(self):
        return 'vector-(%d, %d)' %(self.a, self.b)

    def __add__(self, other):
        return Vector(self.a + other.a, self.b + other.b)

v1 = Vector(2, 10)
v2 = Vector(5, -2)
v3 = Vector(5, 2)

print v1 + v2 + v3

2. 操作mysql数据库示例
示例一:
import MySQLdb

db = MySQLdb.connect('192.168.0.1', 'root', 'xxxxxxx', 'test')

cursor = db.cursor()

cursor.execute('select version()')

data = cursor.fetchone()

print 'database version: %s' %data

db.close()
'-------'
示例二:
import MySQLdb

db = MySQLdb.connect('192.168.0.1', 'root', 'xxxxxxx', 'test')

cursor = db.cursor()

sql = '''
insert into employee (first_name, last_name, age, sex, income)
values ('mac', 'mohan', 20, 'm', 2000)
'''

try:
    cursor.execute(sql)
    db.commit()
except:
    db.rollback()

db.close()
'-------'
示例三:
import MySQLdb

db = MySQLdb.connect('192.168.0.1', 'root', 'xxxxxxx', 'test')

cursor = db.cursor()

sql = 'select * from employee where income > "%d"' %(1000)

try:
    cursor.execute(sql)
    results = cursor.fetchall()
    for row in results:
        fname = row[0]
        lname = row[1]
        age = row[2]
        sex = row[3]
        income = row[4]
        print 'fname=%s, lname=%s, age=%d, sex=%s, income=%d' %\
              (fname, lname, age, sex, income)
except:
    print 'error: unable to fetch data.'

db.close()
'-------'
示例四:
import MySQLdb

db = MySQLdb.connect('192.168.0.1', 'root', 'xxxxxxx', 'test')

cursor = db.cursor()

sql = 'select * from employee where income > "%d"' %(1000)

try:
    cursor.execute(sql)
    results = cursor.fetchall()
    print 'end is %s' %results
except:
    print 'error: unable to fetch data.'

db.close()
'-------'
示例五:
import MySQLdb

db = MySQLdb.connect('192.168.0.1', 'root', 'xxxxxxx', 'test')

cursor = db.cursor()

sql = 'update employee set age = age + 1 where sex = "%s"' %('m')

try:
    cursor.execute(sql)
    db.commit()
except:
    db.rollback()

db.close()
'-------'
示例六:
import MySQLdb

db = MySQLdb.connect('192.168.0.1', 'root', 'xxxxxxx', 'test')

cursor = db.cursor()

sql = 'delete from employee where age > "%d"' %(20)

try:
    cursor.execute(sql)
    db.commit()
except:
    db.rollback()

db.close()

3. socket通讯示例
服务端:
import socket

s = socket.socket()
host = socket.gethostname()
port = 12345
s.bind((host, port))

s.listen(5)
while True:
    c, addr = s.accept()
    print 'connection address: ', addr
    c.send('welcome! ')
    c.close()
'-------'
客户端:
import socket

s = socket.socket()          
host = socket.gethostname() 
port = 12345               

s.connect((host, port))
print s.recv(1024)
s.close()  

4. 发送邮件示例
import smtplib
from email.mime.text import MIMEText
from email.header import Header

mail_host = 'smtp.189.cn'
mail_user = 'xxxxxxx@189.cn'
mail_pwd = 'xxxxxxx'

sender = 'xxxxxxx@189.cn'
receivers = ['xxxxxxx@qq.com', 'xxxxxxx@163.com']

message = MIMEText('this is a test mail about python...', 'plain', 'utf-8')
message['From'] = Header('teacher', 'utf-8')
message['To'] = Header('test', 'utf-8')
message['Subject'] = Header('a python test mail', 'utf-8')

try:
    mail = smtplib.SMTP()
    mail.connect(mail_host, 25)
#   mail.set_debuglevel(1)
    mail.login(mail_user, mail_pwd)
    mail.sendmail(sender, receivers, message.as_string())
    print 'send success!'
except smtplib.SMTPException:
    print 'some error occoured!'

5. 装饰器示例
示例一:
def log(func):
    def wrapper(*args, **kw):
        print 'call %s():' % func.__name__
        return func(*args, **kw)
    return wrapper

@log
def now():
    print '2015-10-19'

now()
'-------'
示例二:
debug = True

def print_args(funcA):
    def funcB(*args, **kwargs):
        if debug:
            print(args, kwargs)
        return funcA(*args, **kwargs)
    return funcB

@print_args
def make_list(a, b):
    return [a, b]

@print_args
def add(a, b, c=3):
    return a + b + c

print make_list(1, 2)
print add(1, 2, 3)    
'-------'
示例三:
class Cat():

    total_count=0

    def __init__(self, name):
        self.name = name
        self.born_one()

    def say_hello(self):
        print("i'm %s, hello." %self.name)

    @classmethod
    def born_one(cls):
        cls.total_count += 1

tom = Cat("tom")
lily = Cat("lily")

tom.say_hello()
lily.say_hello()

print(Cat.total_count)    
'-------'
示例四:
class Dog():

    def __init__(self, name):
        self.name = name     

    def say_hello(self):
        print("i'm %s, hello." %self.name)

    @staticmethod
    def get_leg_count():
        return 4

print(Dog.get_leg_count())    
'-------'
示例五:
def makebold(fn):
    def wrapped():
        return "<b>" + fn() + "</b>"
    return wrapped
 
def makeitalic(fn):
    def wrapped():
        return "<i>" + fn() + "</i>"
    return wrapped

@makebold
@makeitalic
def hello():
    return "hello world"

print hello()

6. 闭包示例
def make_add(x):
    def add(y):
        return x + y
    return add

z = make_add(23)

print z(100)

7. 已指定格式打印日期和时间示例
import time
import datetime

print time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())

print(datetime.date.today().strftime('%d/%m/%Y'))

birthday = datetime.date(2000, 12, 22)
print(birthday.strftime('%d/%m/%Y'))

birthday_nextday = birthday + datetime.timedelta(days=1)
print(birthday_nextday.strftime('%d/%m/%Y'))

birthday_nextyear = birthday.replace(year = birthday.year + 1)
print(birthday_nextyear.strftime('%d/%m/%Y'))

8. 复制列表示例
a = [1, 2, 3]
b = a[:]

print b

9. 滤除列表中空字符串示例
a = ['A', '', 'B', None, 'C', '  ']

def not_empty(x):
    return x and x.strip()

print filter(not_empty, a)

10. 格式化输出format示例
x = [1, 3, 5, 7, 5, 3, 1]

for i in range(7):
    print '{:-^7}'.format('*'*x[i])
    
11. 用递归计算阶层示例
def factorial(i):
    if i == 1:
        sum = 1
    else:
        sum = i * factorial(i - 1)
    return sum

while True:
    x = int(raw_input('enter a number to show it\'s factorial: '))

    if 0 < x < 30:
        print factorial(x)
    else:
        print 'between 0 and 30! '
